# Generated by Django 4.2.13 on 2024-06-24 15:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('album_id', models.IntegerField(primary_key=True, serialize=False)),
                ('album_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('artist_id', models.IntegerField(primary_key=True, serialize=False)),
                ('artist_name', models.CharField(blank=True, max_length=45, null=True)),
                ('consistent_fans_score', models.CharField(blank=True, max_length=45, null=True)),
                ('song_count', models.IntegerField(blank=True, null=True)),
                ('total_streams', models.IntegerField(blank=True, null=True)),
                ('onemil', models.IntegerField(blank=True, null=True)),
                ('fivemil', models.IntegerField(blank=True, null=True)),
                ('tenmil', models.IntegerField(blank=True, null=True)),
                ('fiftymil', models.IntegerField(blank=True, null=True)),
                ('hundredmil', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dates',
            fields=[
                ('fetch_data_dates_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_dates', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fetch_data_dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('likes_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
            ],
            options={
                'db_table': 'likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('idPost', models.IntegerField(primary_key=True, serialize=False)),
                ('userID', models.IntegerField()),
                ('datePosted', models.DateTimeField(blank=True)),
                ('post', models.TextField(blank=True)),
                ('username', models.CharField(max_length=150)),
                ('like_count', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post2',
            fields=[
                ('idPost', models.IntegerField(primary_key=True, serialize=False)),
                ('userID', models.IntegerField()),
                ('datePosted', models.DateTimeField(blank=True)),
                ('post', models.TextField(blank=True)),
                ('username', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'posts2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SinglesStats',
            fields=[
                ('singles_stats_id', models.IntegerField(primary_key=True, serialize=False)),
                ('artist_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=45, null=True)),
                ('album_id', models.IntegerField(blank=True, null=True)),
                ('fetch_data_dates_id', models.IntegerField(blank=True, null=True)),
                ('max_fetch_data_streams', models.IntegerField(blank=True, null=True)),
                ('difference_streams', models.IntegerField(blank=True, null=True)),
                ('album_name', models.CharField(blank=True, max_length=45, null=True)),
                ('artist_name', models.CharField(blank=True, max_length=45, null=True)),
                ('fetch_dates', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'singles_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('timeline_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('deets', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'timeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('fullname', models.CharField(blank=True, max_length=150)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=150)),
                ('fav_artist', models.CharField(blank=True, max_length=150)),
                ('fave_album', models.CharField(blank=True, max_length=150)),
                ('current_fave_song', models.CharField(blank=True, max_length=150)),
                ('gatekeep_song', models.CharField(blank=True, max_length=150)),
                ('fan_converter_song', models.CharField(blank=True, max_length=150)),
                ('alltime_fave_song', models.CharField(blank=True, max_length=150)),
                ('dont_like_song', models.CharField(blank=True, max_length=150)),
            ],
            options={
                'db_table': 'userprofile',
                'managed': False,
            },
        ),
    ]
